# # Quick Sort - Дунд түвшний бодлогууд

# ## Бодлого 1: Quick Sort-ыг өөрчилсөн хувилбар
# **Даалгавар:** Quick Sort алгоритмыг бич, гэхдээ эхний болон сүүлийн элементийн дундажыг pivot болгон сонгох хувилбараар.

# **Шаардлага:**
# - Массивын эхний ба сүүлийн элементийн дундаж утгыг олох
# - Энэ утгатай хамгийн ойр элементийг pivot болгон сонгох
# - Массивыг эрэмбэлэх

# **Жишээ:**
# ```
# Өгөгдсөн: [8, 3, 1, 7, 0, 10, 2]
# Эхний = 8, Сүүлийн = 2, Дундаж = 5
# Pivot = 7 (5-д хамгийн ойр)
# Гарах дүн: [0, 1, 2, 3, 7, 8, 10]
# ```

# ---

# ## Бодлого 2: K-р том элементийг олох
# **Даалгавар:** Quick Sort-ын partition функцийг ашиглан массиваас K-р том элементийг олох функц бич (QuickSelect алгоритм).

# **Шаардлага:**
# - Бүх массивыг эрэмбэлэхгүй
# - Зөвхөн partition ашиглан шаардлагатай хэсгийг боловсруулах
# - O(n) дундаж цаг зарцуулах

# **Жишээ:**
# ```
# Өгөгдсөн: arr = [7, 10, 4, 3, 20, 15], k = 3
# Гарах дүн: 10 (3-р том элемент)
# Тайлбар: Эрэмбэ: [3, 4, 7, 10, 15, 20]
# ```

# ---

# ## Бодлого 3: 3-Way Quick Sort
# **Даалгавар:** Олон давхардсан элементтэй массивт зориулсан 3-Way Quick Sort бич.

# **Шаардлага:**
# - Массивыг 3 хэсэгт хуваах: pivot-с бага, тэнцүү, их
# - Давхардсан утгуудыг илүү үр дүнтэй боловсруулах
# - Dutch National Flag бодлогын ойлголт ашиглах

# **Жишээ:**
# ```
# Өгөгдсөн: [4, 9, 4, 4, 1, 9, 4, 4, 9, 4, 4, 1, 4]
# Pivot = 4
# Хуваагдах: [1, 1] | [4, 4, 4, 4, 4, 4, 4, 4] | [9, 9, 9]
# ```

# ---

# ## Бодлого 4: Хос массивыг эрэмбэлэх
# **Даалгавар:** 2 массив өгөгдсөн (нэг нь түлхүүр, нөгөө нь утга). Түлхүүр массивыг эрэмбэлж, утга массивыг тохируулан зөөх Quick Sort бич.

# **Шаардлага:**
# - Хоёр массивын индекс харилцан холбоотой байх
# - Түлхүүр массивыг эрэмбэлэхэд утга массив дагаж өөрчлөгдөх

# **Жишээ:**
# ```
# Түлхүүр: [5, 2, 8, 1, 9]
# Утга:    ['a', 'b', 'c', 'd', 'e']

# Гарах дүн:
# Түлхүүр: [1, 2, 5, 8, 9]
# Утга:    ['d', 'b', 'a', 'c', 'e']
# ```

# ---

# ## Бодлого 5: Хязгаарлагдмал эрэмбэлэлт
# **Даалгавар:** Массивын зөвхөн L-с R хүртэлх хэсгийг эрэмбэлэх Quick Sort бич.

# **Шаардлага:**
# - Эхлэл ба төгсгөлийн индекс өгөгдөнө
# - Бусад хэсгийг өөрчлөхгүй
# - In-place эрэмбэлэлт

# **Жишээ:**
# ```
# Өгөгдсөн: [10, 7, 8, 9, 1, 5], L = 1, R = 4
# Гарах дүн: [10, 1, 7, 8, 9, 5]
# (Зөвхөн [7, 8, 9, 1] хэсгийг эрэмбэлсэн)
# ```

# ---

# ## Бодлого 6: Quick Sort-ын хамгийн муу тохиолдлыг илрүүлэх
# **Даалгавар:** Өгөгдсөн массив Quick Sort-т хамгийн муу тохиолдол (worst case) үүсгэх эсэхийг шалгах функц бич.

# **Шаардлага:**
# - Сүүлийн элементийг pivot болгон сонгодог гэж үзэх
# - Хамгийн муу тохиолдол: эрэмбэлэгдсэн эсвэл урвуу эрэмбэлэгдсэн
# - O(n²) хугацаа шаардагдах тохиолдлыг илрүүлэх

# **Жишээ:**
# ```
# Өгөгдсөн: [1, 2, 3, 4, 5]
# Гарах дүн: true (worst case байна)

# Өгөгдсөн: [3, 1, 4, 2, 5]
# Гарах дүн: false (worst case биш)
# ```

# ---

# ## Бодлого 7: Iterative Quick Sort
# **Даалгавар:** Рекурс ашиглахгүйгээр Quick Sort-ыг стек ашиглан бич (iterative хувилбар).

# **Шаардлага:**
# - Өөрийн гараар стек бүтэц үүсгэх
# - Эхлэл ба төгсгөлийн индексүүдийг стект хадгалах
# - Рекурсийн дуудлагыг давталтаар солих

